
    function FormTree(adminRoles, assignedRoles) {
      var datatree = {
        text: adminRoles[0], value: adminRoles[0], children: []
      }

      if (adminRoles[1].length > 0) {
        for (let adminRole of adminRoles[1]) {
          for (let assignedRole of assignedRoles[1]) {
            if (adminRole == assignedRole) {
              var checked = true;
              break;
            } else {
              var checked = false;
            }
          }

          let childtree = {
            text: adminRole, value: adminRole, checked: checked, children: []
          }

          for (let a of objectdata) {
            if (a[0] == adminRole) {
              for (let aRoles of assignedRoles) {
                if (adminRole != aRoles[0]) {
                  checked = false;
                }
              }
              if (a[1].length > 0) {
                for (let child1 of a[1]) {
                  for (let aRoles of assignedRoles) {
                    if (adminRole == aRoles[0]) {
                      for (let rAssigned1 of aRoles[1]) {
                        if (child1 == rAssigned1) {
                          checked = true;
                          break;
                        } else {
                          checked = false;
                        }
                      }
                    }
                  }
                  let subChildtree = {
                    text: child1, value: child1, checked: checked, children: []
                  }
                  for (let a of objectdata) {
                    if (a[0] == child1) {

                      for (let aRoles of assignedRoles) {
                        if (child1 != aRoles[0]) {
                          checked = false;
                        }
                      }
                      if (a[1].length > 0) {
                        for (let child2 of a[1]) {
                          for (let aRoles of assignedRoles) {
                            if (child1 == aRoles[0]) {
                              for (let rAssigned1 of aRoles[1]) {
                                if (child2 == rAssigned1) {
                                  checked = true;
                                  break;
                                } else {
                                  checked = false;
                                }
                              }
                            }
                          }
                          let subChildtreeLevel = {
                            text: child2, value: child2, checked: checked, children: []
                          }
                          subChildtree.children.push(subChildtreeLevel);
                        }
                      }
                    }
                  }
                  childtree.children.push(subChildtree);
                }
              }

            }
          }
          datatree.children.push(childtree)
        }
      }
      return datatree;
      console.log(datatree);
    }















    // var itema = new TreeviewItem(maintree);
    // this.newarray.push(itema);
    // for(let a of treearray){
    //   var itema=new TreeviewItem(a);
    //   this.newarray.push(itema);
    // }
    this.breadcrumbTitle = "Roles";
    this.dataLength = this.service.data.length;
    this.items = this.service.getBooks();
  }

  addRole() {
    console.log(this.userName);
    console.log(this.userType);
    console.log(this.items);
    this.items.forEach(item => { console.log(item.checked) });
  }



  onSelectedChange($event) {
    console.log($event);
    console.log(this.newarray);

    var response = [];
    var obj = {};


    if (this.newarray.length > 0) {
      for (let a of this.newarray) {
        var level2 = [];
        if (a.checked == true || a.indeterminate == true) {
          if (a.children.length > 0) {
            for (let b of a.children) {
              var level3 = [];
              if (b.checked == true || b.indeterminate == true) {
                level2.push(b.text);
                response.push(b.text);
                for (let c of b.children) {
                  var level4 = [];
                  if (c.checked == true || c.indeterminate == true) {
                    level3.push(c.text);
                    response.push(c.text);
                    if (c.children != undefined) {
                      for (let d of c.children) {
                        if (d.checked == true) {
                          level4.push(d.text);
                          response.push(d.text);
                        }
                        obj[c.text] = level4;
                      }
                    }
                  }
                }
                obj[b.text] = level3;
              }
            }
          }
          obj[a.text] = level2;
          response.push(a.text);
        }

      }
      console.log(obj);
      //console.log(response);
    }
    //console.log($event);
  }
